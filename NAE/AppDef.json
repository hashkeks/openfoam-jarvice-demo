{
  "name": "OpenFOAM8 - PraktiVersion",
  "description": "OpenFOAM8 with Nimbix Desktop, based on Nimbix OpenFOAM 7",
  "author": "Casper, Kaftan",
  "licensed": false,
  "classifications": [
    "Simulation/Computational Fluid Dynamics"
  ],
  "machines": [
    "n[0-9]*",
    "n[1-9][0-9]*",
    "nc[3-9]*",
    "nc[1-9][0-9]*"
  ],
  "vault-types": [
    "FILE"
  ],
  "commands": {
    "GUI": {
      "path": "/usr/local/scripts/start-openfoam-viz.sh",
      "interactive": true,
      "name": "OpenFOAM GUI",
      "description": "Graphical version with Nimbix Desktop",
      "machines": [
        "n[0-9]*",
        "nc[1-9][0-9]*"
      ],
      "parameters": {}
    },
    "Batch": {
      "path": "/usr/local/scripts/openfoam-batch.sh",
      "interactive": true,
      "name": "OpenFOAM Batch",
      "description": "Run OpenFOAM8; for a case thru decompose, mesh and solve stages with MPI, Case should be run from /data/openfoam8/run ($FOAM_RUN)",
      "parameters": {
        "-case": {
          "required": true,
          "type": "FILE",
          "name": "OpenFOAM case, select any file in the case directory"
        },
        "-mesh": {
          "type": "BOOL",
          "required": true,
          "value": true,
          "name": "Run mesh generation?",
          "description": "Select here to run the selected mesh generation utility on the Case"
        },
        "-meshtype": {
          "values": [
            "blockMesh",
            "extrude2DMesh",
            "extrudeMesh",
            "extrudeToRegionMesh",
            "foamyHexMesh",
            "foamyQuadMesh",
            "snappyHexMesh"
          ],
          "required": true,
          "type": "selection",
          "name": "Mesh generator"
        },
        "-solver": {
          "values": [
            "laplacianFoam",
            "potentialFoam",
            "scalarTransportFoam",
            "adjointShapeOptimizationFoam",
            "boundaryFoam",
            "foamyQuadMesh",
            "icoFoam",
            "nonNewtonianIcoFoam",
            "pimpleFoam",
            "SRFPimpleFoam",
            "pisoFoam",
            "simpleFoam",
            "porousSimpleFoam",
            "SRFSimpleFoam",
            "rhoCentralFoam",
            "rhoPimpleFoam",
            "rhoPorousSimpleFoam",
            "cavitatingFoam",
            "compressibleInterFoam",
            "compressibleInterFilmFoam",
            "compressibleMultiphaseInterFoam",
            "driftFluxFoam",
            "interFoam",
            "interMixingFoam",
            "interPhaseChangeFoam",
            "multiphaseEulerFoam",
            "multiphaseInterFoam",
            "potentialFreeSurfaceFoam",
            "reactingMultiphaseEulerFoam",
            "interPhaseChangeFoam",
            "reactingTwoPhaseEulerFoam",
            "twoLiquidMixingFoam",
            "twoPhaseEulerFoam",
            "dnsFoam",
            "reactingTwoPhaseEulerFoam",
            "chemFoam",
            "reactingTwoPhaseEulerFoam",
            "coldEngineFoam",
            "engineFoam",
            "fireFoam",
            "PDRFoam",
            "reactingFoam",
            "rhoReactingBuoyantFoam",
            "rhoReactingFoam",
            "XiengineFoam",
            "XiFoam",
            "buoyantPimpleFoam",
            "buoyantSimpleFoam",
            "chtMultiRegionFoam",
            "thermoFoam",
            "coalChemistryFoam",
            "DPMFoam",
            "MPPICFoam",
            "icoUncoupledKinematicParcelFoam",
            "reactingParcelFoam",
            "simpleReactingParcelFoam",
            "sprayFoam",
            "uncoupledKinematicParcelFoam",
            "dsmcFoam",
            "mdEquilibrationFoam",
            "mdFoam",
            "electrostaticFoam",
            "magneticFoam",
            "mhdFoam",
            "solidDisplacementFoam",
            "solidEquilibriumDisplacementFoam",
            "financialFoam"
          ],
          "required": true,
          "type": "selection",
          "name": "Solver"
        }
      }
    }
  },
  "image": {
    "type": "image/png",
    "data": ""
  }
}
